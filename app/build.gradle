plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'
    id("dagger.hilt.android.plugin")
}

android {
    compileSdk 31

    signingConfigs {
        signed {
            storeFile file(rootProject.file('keystore/keystore.jks'))
            storePassword 'LpKoJi098)(*'
            keyAlias 'latestmovies'
            keyPassword 'LpKoJi098)(*'
        }
    }

    defaultConfig {
        applicationId "com.lovoo.lovoooffice"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "BASE_URL", '"https://europe-west1-lv-trialwork.cloudfunctions.net/"'
        //TODO please add Basic auth. ex: Basic d5g32b9UfmdsaDCdAAS8aS26d87hGHjadFH==
        buildConfigField "String", "BASIC_TOKEN", '"Basic bG92b29UcmlhbFVzZXI6bG92b28jMjAyMQ=="'

        buildConfigField "int", "READ_TIMEOUT", "30"
        buildConfigField "int", "WRITE_TIMEOUT", "30"
        buildConfigField "int", "CONNECTION_TIMEOUT", "10"
        buildConfigField "long", "CACHE_SIZE_BYTES", "10*10*1024"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    def versionNumber = "1.0.0"
    def buildNumber = 1

    flavorDimensions "environment"
    productFlavors {
        dev {
            dimension "environment"
            applicationIdSuffix ".dev"
            versionCode 1
            versionName "$versionNumber-dev-$buildNumber"
            resValue "string", "app_name", "DLovooOffice"
            //TODO add env url
        }

        sandbox {
            dimension "environment"
            applicationIdSuffix ".sandbox"
            versionCode 1
            versionName "$versionNumber-sandbox-$buildNumber"
            resValue "string", "app_name", "SLovooOffice"
            //TODO add env url
        }

        staging {
            dimension "environment"
            applicationIdSuffix ".staging"
            versionCode 1
            versionName "$versionNumber-staging-$buildNumber"
            resValue "string", "app_name", "TLovooOffice"
            //TODO add env url
        }

        production {
            dimension "environment"
            versionCode 1
            versionName "$versionNumber"
            resValue "string", "app_name", "LovooOffice"
            //TODO add env url
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

def room_version = "2.3.0"

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
//    Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.1'
//    ROOM
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
//    Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    def hilt_version = "2.40.2"
//    Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")

//    Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
//    Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //Local unit tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.room:room-testing:$room_version"

    // AndroidX Test - Instrumented testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"
    debugImplementation "androidx.fragment:fragment-testing:1.4.0"

    // AndroidX Test - JVM testing
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "org.robolectric:robolectric:4.5-alpha-1"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Mocking framework
    testImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'org.mockito:mockito-android:2.19.0'

    //Coroutines Test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"

//    Hilt Test
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:2.38.1"
//    //PowerMockito
//    testImplementation "org.powermock:powermock-module-junit4:1.7.4"
//    testImplementation "org.powermock:powermock-module-junit4-rule:1.7.4"
//    testImplementation "org.powermock:powermock-api-mockito2:1.7.4"
//    testImplementation "org.powermock:powermock-classloading-xstream:1.6.6"
}